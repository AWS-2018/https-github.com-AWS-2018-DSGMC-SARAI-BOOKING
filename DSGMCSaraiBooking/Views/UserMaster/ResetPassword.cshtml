@model BusinessObjects.Common.UserMaster

@{
    ViewBag.Title = "Reset Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form action="@Url.Action("ResetPassword", "UserMaster")"  onsubmit="return ValidatePassword();" method="post" data-parsley-validate class="form-horizontal form-label-left">
    <div class="right_col" role="main">
        <div class="">

            <div class="clearfix"></div>

            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel">
                        <div class="x_title">
                            <h2>Reset Password</h2>

                            <ul class="nav navbar-right panel_toolbox">
                                <li>
                                    <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("Index", "UserMaster", new { Token = WebSchoolManager.App_Start.Common.EncryptData("`PAGE_NUMBER=" + ViewBag.PageNumber) })'">Back</button>
                                </li>

                                <li>
                                    <button type="submit" class="btn btn-success">Save</button>
                                </li>
                            </ul>

                            <div class="clearfix"></div>
                        </div>

                        @ViewBag.ErrorMessage

                        <div class="x_content">
                            <br />

                            @Html.HiddenFor(model => model.RowVersion)
                            @Html.HiddenFor(model => model.CheckSumValue)
                            @Html.HiddenFor(model => model.IsActive)
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.GUID)

                            @Html.HiddenFor(model => model.Name)
                            @Html.HiddenFor(model => model.EmailId)
                            @Html.HiddenFor(model => model.MobileNo)

                            <input type="hidden" id="hdnPageNumber" name="hdnPageNumber" value="@ViewBag.PageNumber" />

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Username <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.Name, new { disabled="disabled", autocomplete = "off", maxlength = 50, @class = "form-control col-md-7 col-xs-12 text-uppercase" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Email Id <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.EmailId, new { disabled = "disabled", autocomplete = "off", maxlength = 100, @class = "form-control col-md-7 col-xs-12 text-lowercase" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Mobile No. <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.MobileNo, new { disabled = "disabled", autocomplete = "off", maxlength = 10, onkeydown = "return PositiveNumsInt(event);", @class = "form-control col-md-7 col-xs-12" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Current Password <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.PasswordFor(model => model.Password, new {  required="required", autocomplete = "off", maxlength = 100, @class = "form-control col-md-7 col-xs-12 text-lowercase" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    New Password <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    <input type="password" id="txtNewPassword" name="txtNewPassword" value="" required="required" autocomplete="off" maxlength="100" class="form-control col-md-7 col-xs-12 text-lowercase" />
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                                    Confirm Password <span class="required">*</span>
                                </label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    <input type="password" id="txtConfirmPassword" name="txtConfirmPassword" value="" required="required" autocomplete="off" maxlength="100" class="form-control col-md-7 col-xs-12 text-lowercase" />
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    function ValidatePassword()
    {
        if (txtNewPassword.value.trim() != txtConfirmPassword.value.trim())
        {
            ShowBootBoxErrorMessage("'New Password' and 'Confirm Password' must be same.")
            return false;
        }
    }
</script>